{"version":3,"sources":["Componant/Book.js","Componant/Shelf.js","Componant/Home.js","BooksAPI.js","App.js","index.js"],"names":["Book","book","updateShelf","className","style","width","height","backgroundImage","imageLinks","smallThumbnail","onChange","e","target","value","defaultValue","shelf","disabled","title","authors","Shelf","books","section","category","booksCategory","filter","map","id","Home","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","body","JSON","stringify","search","query","maxResults","App","useState","setbooks","setquery","booksFormSearch","setbooksFormSearch","Map","isbook","setisbook","allbooks","setallbooks","a","BooksAPI","createListBooks","getSearch","error","useEffect","get","maping","set","getAllBooks","has","path","element","type","placeholder","booking","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5af3416.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Book({book ,updateShelf}) {\r\n \r\n\r\n  ;\r\n  return (\r\n    <>\r\n    <div>\r\n          <div className=\"book\">\r\n            <div className=\"book-top\">\r\n              <div\r\n                className=\"book-cover\"\r\n                style={{\r\n                  width: 128,\r\n                  height: 193,\r\n                  backgroundImage:\r\n                  book.imageLinks ? \r\n                  `url(${\r\n                    book.imageLinks.smallThumbnail\r\n                  })`\r\n                  :\r\n                  \"\"\r\n                }}\r\n              ></div>\r\n              <div className=\"book-shelf-changer\">\r\n                <select   onChange={(e)=>updateShelf(book, e.target.value)}   defaultValue={book.shelf ? book.shelf : \"none\"}>\r\n                  <option value=\"none\" disabled>\r\n                    Move to...\r\n                  </option>\r\n                  <option value=\"currentlyReading\">\r\n                    Currently Reading\r\n                  </option>\r\n                  <option value=\"wantToRead\">Want to Read</option>\r\n                  <option value=\"read\">Read</option>\r\n                  <option value=\"none\">None</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"book-title\">{book.title}</div>\r\n            <div className=\"book-authors\">{book.authors}</div>\r\n          </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Book from './Book'\r\n\r\nexport default function Shelf({books ,section ,category ,updateShelf}) {\r\n\r\n    const booksCategory = books.filter((book)=> book.shelf === category)\r\n  return (\r\n    <div className=\"bookshelf\">\r\n    <h2 className=\"bookshelf-title\"> {section} </h2>\r\n    <div className=\"bookshelf-books\">\r\n      <ol className=\"books-grid\">\r\n\r\n      {booksCategory.map((book)=>(\r\n    <Book key={book.id} book={book} updateShelf={updateShelf} />\r\n        ))}\r\n   \r\n        \r\n      </ol>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Shelf from './Shelf'\r\n\r\n\r\n\r\n\r\nexport default function Home({books ,updateShelf}) {\r\n\r\n  return (\r\n    <div className=\"list-books\">\r\n    <div className=\"list-books-title\">\r\n      <h1>MyReads</h1>\r\n    </div>\r\n    <div className=\"list-books-content\">\r\n      <div>\r\n       <Shelf  section='Currently Reading' books={books} category=\"currentlyReading\" updateShelf={updateShelf} />\r\n       <Shelf section='Want To Read' books={books} category=\"wantToRead\"  updateShelf={updateShelf} />\r\n       <Shelf   section='Read' books={books} category=\"read\"   updateShelf={updateShelf}/>\r\n        \r\n       \r\n  \r\n      </div>\r\n      <div className=\"open-search\">\r\n                <Link to=\"/search\">\r\n                  <button>Add a book</button>\r\n                </Link>\r\n              </div>\r\n    </div>\r\n    \r\n     \r\n    \r\n  </div>\r\n  \r\n\r\n  )\r\n}\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import \"./App.css\";\r\nimport React, { useState ,useEffect } from \"react\";\r\nimport { Route, Routes, Link } from 'react-router-dom';\r\nimport Home from \"./Componant/Home\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport Book from \"./Componant/Book\";\r\n\r\nfunction App() {\r\n  const [books, setbooks] = useState([])\r\n  const [query, setquery] = useState('')\r\n  const [booksFormSearch, setbooksFormSearch] = useState([])\r\n  const [isbook, setisbook] = useState(new Map());\r\n  const [allbooks, setallbooks] = useState([]);\r\n\r\n\r\n async function get(){\r\n    let res = await BooksAPI.getAll() \r\n     setbooks(res)\r\n     setisbook(createListBooks(res))\r\n  }\r\n  \r\n async function updateShelf(book ,shelf){\r\n     await BooksAPI.update(book , shelf) \r\n    let res = await BooksAPI.getAll() \r\n    setbooks(res)\r\n\r\n  }\r\n\r\nconst getSearch = async(query)=>{\r\n  let data =await  BooksAPI.search(query)\r\n  if(query)\r\n  if(data.error){\r\n            setbooksFormSearch([])\r\n          }else{\r\n           \r\n              setbooksFormSearch(data)\r\n            \r\n          }\r\n            }\r\n      \r\n  // useEffect(()=>{\r\n  //   let isSearch = true\r\n  //   if(query){\r\n  //     BooksAPI.search(query).then(result=>{\r\n  //       if(result.error){\r\n  //         setbooksFormSearch([])\r\n  //       }else{\r\n  //         if(isSearch){\r\n  //           setbooksFormSearch(result)\r\n  //         }\r\n  //       }\r\n  //     })\r\n  //   }\r\n  \r\n  //   return()=>{\r\n  //     isSearch =true;\r\n  //     setbooksFormSearch([])\r\n  //   }\r\n  // },[query])\r\n\r\n \r\nuseEffect(() => {\r\n  get()\r\n  getSearch(query)\r\n\r\n}, [query])\r\n\r\nconst createListBooks = (books) => {\r\n  const maping = new Map();\r\n  books.map(book => maping.set(book.id, book));\r\n  return maping;\r\n}\r\n\r\nuseEffect(() => {\r\n\r\n  const getAllBooks = booksFormSearch.map(book => {\r\n    if (isbook.has(book.id)) {\r\n      return isbook.get(book.id);\r\n    } else {\r\n      return book;\r\n    }\r\n  })\r\n  setallbooks(getAllBooks);\r\n}, [isbook, booksFormSearch])\r\n\r\n\r\n\r\n  return (\r\n<Routes>\r\n\r\n<Route path='/search' element={\r\n            <div className=\"search-books\">\r\n              <div className=\"search-books-bar\">\r\n                <Link to=\"/\">\r\n                  <button className=\"close-search\">Close</button>\r\n                </Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                  <input type=\"text\" placeholder=\"Search by title or author\"value={query}  onChange={(e) => setquery(e.target.value)} />\r\n                </div>\r\n              </div>\r\n              <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                  {allbooks.map(booking => (\r\n                    <li key={booking.id}>\r\n                      <Book book={booking}  updateShelf={updateShelf} />\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          }/>\r\n\r\n<Route path=\"/\" element={<Home books={books}  updateShelf={updateShelf} />\r\n\r\n\r\n}> </Route>\r\n\r\n      </Routes>\r\n         \r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n   <App />\r\n </BrowserRouter>,\r\n  \r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}